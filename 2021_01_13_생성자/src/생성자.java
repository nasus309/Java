import java.util.Scanner;

public class 생성자 {

	public static void main(String[] args) {
		
		// Scanner s = new Scanner(); -> 기본생성자 안만들어놔서 오류뜸.
		Scanner s = new Scanner(System.in);
		
		커피 a = new 커피(); //컴파일러가 생성자가 하나라도 없으면 자동으로 생성.
		/* System.out.println(a.가격); -> 필드에 직접 접근하는것은 되도록 피한다
		 필드에는 private을 쓰고 메인 클래스에는 메소드로 필드를 호출해 주는 것을 추천!*/
		a.set원산지("과테말라");
		System.out.println(a.get원산지());
		
		커피 b = new 커피("우리집");
		System.out.println(b.get원산지());
		
		커피 aa[] = new 커피[100]; //정수형 배열 100개짜리 공간.
		for(int i=0;i<aa.length;i++) {
			aa[i] = new 커피("과테말라","");
		}
		/*
		aa[1] = new 커피("과테말라");
		aa[2] = new 커피("과테말라");
		...
		aa[100] = new 커피("과테말라"); */				
		
	
		//커피 a = new 커피(); 가 없다고 가정했을 때, static 메소드라서 커피를 인스턴스화 안 해줘도 됨...!!
		커피.커피수량();
		
		a.커피수량(); //--> 불가능은 아니고....추천을 안함
		
		
		//자식 클래스로 객체 생성
		//트럭 포터 = new 트럭(); //슈펴실행 => 서브실행
		//승용차 IG = new 승용차(); //슈펴실행 => 서브실행
		//IG.가속();
		
		/***다형성
		1. 서브클래스 생성자 호출위치에서 skip
		2.슈퍼클래스의 생성자를 호출
		3. 슈퍼클래스가 가지고 있는 멤버 정보를 통해 인스턴스에 추가.	
		4. 서브클래스 멤버들을 생성 ***/
		
		//자동차 포니 = new 승용차(); //슈펴실행 => 서브실행
		//포니.가속();
		
		자동차 포터1 = new 트럭(); // 부모타입의 클래스를 자식타입으로 생성했다. 승용차의 기능은 .찍어서 접근 불가능,근데 오버라이딩은 가능-> upCasting;
		//포터1.감속();
		
		포터1.색상바꾸기("녹색");
		System.out.println(자동차.색상); //??왜바뀌지
		
		자동차 포터2 = new 트럭("서브클래스");
		포터2.색상바꾸기("블루");
		System.out.println(포터2.색상); //원래 자동차.색상 해야함?
		
		//스포츠카 람보 = new 스포츠카();
		//System.out.println(람보.색상); //null
		//람보.천장오픈알아보기();
		
		트럭 포터3 = new 트럭();
		포터3.색상변경("화이트");
		System.out.println(포터3.색상);
				
		
		

	}

}
